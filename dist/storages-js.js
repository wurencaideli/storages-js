const e={local:{name:"local",get:e=>localStorage.getItem(e),set(e,t){localStorage.setItem(e,t)},remove(e){localStorage.removeItem(e)},keys:()=>Object.keys(localStorage)},session:{name:"session",get:e=>sessionStorage.getItem(e),set(e,t){sessionStorage.setItem(e,t)},remove(e){sessionStorage.removeItem(e)},keys:()=>Object.keys(sessionStorage)},uni:{name:"uni",get:e=>uni.getStorageSync(e),set(e,t){uni.setStorageSync(e,t)},remove(e){uni.removeStorageSync(e)},keys:()=>uni.getStorageInfoSync().keys},wx:{name:"wx",get:e=>wx.getStorageInfoSync.getItem(e),set(e,t){wx.setStorageInfoSync.setItem(e,t)},remove(e){wx.removeStorageSync.removeItem(e)},keys:()=>wx.getStorageInfoSync().keys}};class t{constructor(e,t,s={}){this.key=e,this.value=t,this.model=s||{}}save(){const{key:e,model:t,value:s}=this,o={value:s,type:typeof s,name:"storages-js"};try{t.set(e,JSON.stringify(o))}catch(e){console.error(e)}}take(){const{key:e,model:t}=this;let s;try{const o=JSON.parse(t.get(e));if(!o)throw"数据转换失败，或者数据已丢失";s=o.value}catch(e){console.error(e)}this.value=s}}const s=Symbol("StateKey");class o{constructor(o,a,i={}){let{model:r,modelName:h,isRealTime:l=!1,beforSet:c,beforGet:n}=i;if(!o)throw"key不能为空";if(r||(r=e[h]),!r)throw`没有 ${h} 此模式。已有模式local,session,uni,wx`;if("object"!=typeof r)throw"没有找到储存模式对象";this._value_=void 0,this.key=o,this.beforSet=c,this.beforGet=n,this.model=r,this[s]="active",this.isRealTime=l,this.storage=new t(o,a,r);r.get(o)?this.take():this.setValue(a)}save(){this.checkState(),this.storage.value=this._value_,this.storage.save()}take(){this.checkState(),this.storage.take(),this._value_=this.storage.value}refresh(){this.checkState(),this.take()}destroy(){this[s]="destroy",this.model.remove(this.key)}keys(){return this.model.keys()}checkState(){if("active"!==this[s])throw"该实例已销毁，数据已被清空"}setValue(e){this.checkState(),"function"==typeof this.beforSet&&(e=this.beforSet(e)),this._value_=e,this.save()}getValue(){this.checkState();let e=this._value_;return"function"==typeof this.beforGet&&(e=this.beforGet(e)),this.isRealTime?(this.take(),e):e}set value(e){this.setValue(e)}get value(){return this.getValue()}}export{o as default};
